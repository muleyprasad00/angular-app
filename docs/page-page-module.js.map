{"version":3,"sources":["./src/app/pages/page/page-routing.module.ts","./src/app/pages/page/page.component.html","./src/app/pages/page/page.component.ts","./src/app/pages/page/page.module.ts"],"names":[],"mappings":"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","file":"page-page-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { PageComponent } from './page.component';\r\n\r\nconst routes: Routes = [{ path: '', component: PageComponent }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class PageRoutingModule { }\r\n","\r\n<ng-container *ngIf=\"i18n\">\r\n\r\n    <div class=\"row\" *ngFor=\"let element of pageConfig\">\r\n        <div class=\"col\" [ngSwitch]=\"element.elementType\">\r\n            <div *ngSwitchCase=\"'breadcrumb'\">\r\n                <app-breadcrumb [breadcrumbList]=\"element.breadcrumbList\"></app-breadcrumb>\r\n            </div>\r\n            <div *ngSwitchCase=\"'grid'\">\r\n                <app-grid\r\n                    [height]=\"element.height\"\r\n                    [i18n]=\"i18n\" \r\n                    [title]=\"element?.title\" \r\n                    [gridButtons]=\"element.gridButtons\"\r\n                    [autoSizeCol]=\"element.autoSizeCol\"\r\n                    [sizeColumnsToFit]=\"element.sizeColumnsToFit\"\r\n                    [columns]=\"element.columns\"\r\n                    (GridReady)=\"fetchData($event,element.queryConfig,element.columns,element?.title)\"\r\n                    [rowData]=\"rowData[element?.title]\"\r\n                    (GridBtnClickEvent)=\"onGridBtnClickEvent($event)\"\r\n                ></app-grid>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</ng-container>","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { Subscription } from 'rxjs';\r\nimport { Columns } from 'src/app/components/grid/column';\r\nimport { UserConfigService } from 'src/app/user-config.service';\r\nimport { Apollo, gql, QueryRef } from 'apollo-angular';\r\nimport { MasterService } from 'src/app/master.service';\r\n\r\n@Component({\r\n  selector: 'app-page',\r\n  templateUrl: './page.component.html',\r\n  styleUrls: ['./page.component.css']\r\n})\r\nexport class PageComponent implements OnInit {\r\n\r\n  breadcrumbList = [];\r\n  gridButtons = []\r\n  columns: Columns[] = [];\r\n  rowData: any = {};\r\n  frameworkComponents: any;\r\n  i18n: any;\r\n  pageConfig: any;\r\n  userConfigSub$!: Subscription;\r\n  pageName: string = '';\r\n  queryConfig: any = {};\r\n  gridApi: any = {};\r\n  gridOptions: any = {};\r\n  private query: QueryRef<any> | undefined;\r\n  constructor(\r\n    private userService: UserConfigService,\r\n    private router: Router,\r\n    private http: HttpClient,\r\n    private route: ActivatedRoute,\r\n    private spinner: NgxSpinnerService,\r\n    private apollo: Apollo,\r\n    private masterService: MasterService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.spinner.show();\r\n    this.route.paramMap.subscribe((params: ParamMap) => {\r\n      this.i18n = null;\r\n      this.pageName = String(params.get('name'));\r\n      if (!this.pageName) return;\r\n      this.userConfigSub$ = this.userService.userCast.subscribe((userDetails: any) => {\r\n        if (userDetails.appName) {\r\n          setTimeout(() => {\r\n            if (this.userConfigSub$)\r\n              this.userConfigSub$.unsubscribe();\r\n            this.i18n = userDetails.i18n[0].translations;\r\n            this.pageConfig = userDetails[this.pageName];\r\n            this.spinner.hide();\r\n          }, 0);\r\n        }\r\n      });\r\n    })\r\n  }\r\n\r\n  fetchData(event: any, queryConfig: any, columns: any = [], title: string) {\r\n    this.gridApi[title] = event.params.api;\r\n    this.gridOptions[title] = event.params.api;\r\n    this.queryConfig[title] = queryConfig;\r\n    const requireColumns: any = []\r\n    columns.forEach((item: any) => {\r\n      if (item.type !== 'action') {\r\n        requireColumns.push(item.field)\r\n      }\r\n    });\r\n    this.masterService.get(queryConfig, requireColumns).subscribe(result => {\r\n      if (result.data && result.data[queryConfig.queryName]) {\r\n        this.rowData[title] = JSON.parse(result.data[queryConfig.queryName].data);\r\n      }\r\n    });\r\n  }\r\n\r\n  onGridBtnClickEvent(event: any) {\r\n    if (event.action === \"navigate\") {\r\n      this.router.navigateByUrl(`/${event.url}/${this.pageName}/${event.id ? event.id : null}`)\r\n    } else if (event.action === \"delete\") {\r\n      this.removeItemFromList(event);\r\n    }\r\n  }\r\n  removeItemFromList(event: any) {\r\n    this.spinner.show();\r\n    const queryConfig = this.queryConfig[event.title]\r\n    this.masterService.delete(queryConfig, event.id).subscribe(({ data }) => {\r\n      const rowIndex = this.rowData[event.title].findIndex((item: any) => item.id === event.id);\r\n      this.rowData[event.title].splice(rowIndex, 1);\r\n      this.gridApi[event.title].setRowData(this.rowData[event.title]);\r\n      this.spinner.hide();\r\n    }, (error) => {\r\n      this.spinner.hide();\r\n      console.log('there was an error sending the query', error);\r\n    });\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { PageRoutingModule } from './page-routing.module';\r\nimport { PageComponent } from './page.component';\r\nimport { ComponentsModule } from 'src/app/components/components.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    PageComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    PageRoutingModule,\r\n    ComponentsModule\r\n  ]\r\n})\r\nexport class PageModule { }\r\n"],"sourceRoot":"webpack:///"}